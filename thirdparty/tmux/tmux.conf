# synchronization for all panes
bind e set-window-option synchronize-panes
# keymapping for resizing pane like vim operation
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5

# Prefix+hjkl are used for selecting pane
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Prefix+ |/- is used for spliting window
bind | split-window -h
bind - split-window -v

# Prefix+r is used for reloading tmux settings
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# locating status-bar on top
set-option -g status-position top

# decision on length of right-left status-bar
set-option -g status-left-length 90
set-option -g status-right-length 120

# #H => machine name
# #P => number of pane
# locate status on edge of left side
set-option -g status-left '#H:[#P]'

# Wi-Fi, Rest of battery, Current Time
set-option -g status-right '#(tmux-mem-cpu-load) | #(get_ssid) #(battery --tmux) [%Y-%m-%d(%a) %H:%M]'

# Correspond to utf8 on status-bar
#set-option -g status-utf8 on

# Set interval for re-drawing
set-option -g status-interval 1

# centralize
set-option -g status-justify centre

#### Copy Mode
    # when copy-mode, we use keymapping like vim
    set-window-option -g mode-keys vi

    # Prefix+v is used for entering copy mode
    # Prefix+v is used for starting copy
    bind-key v copy-mode \; display "Copy mode!"


    # Prefix+Enter/y is used for getting coppied
    set-option -g default-command "exec reattach-to-user-namespace -l $SHELL"
    bind-key    -T copy-mode-vi v     send-keys -X begin-selection
    bind-key    -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
    bind-key    -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
    #bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
    #bind-key -t vi-copy y     copy-pipe "reattach-to-user-namespace pbcopy"
    #bind-key -T copy-mode M-w send-keys -X copy-pipe 'reattach-to-user-namespace pbcopy'

    ## Prefix+p is used for pasting
    ## We can use Cmd-v for pasting beacuse we stored it clipboard.
    #bind-key p paste-buffer

    ##TODO The bellow statement may enbale you to share clipboard between vim and tmux, but I can't achieve it with only bellow statement.
    #set-option -g default-command "reattach-to-user-namespace -l $SHELL"

    ## Escape is used for clear copy selecting
    #bind-key -t vi-copy Escape clear-selection

    ## Ctrl-c is used for canceling copy-mode
    #bind-key -t vi-copy C-c cancel

    ## g is used for moving to top line in text displayed
    #bind-key -t vi-copy g top-line
    ## G is used for moving to bottom line in text displayed
    #bind-key -t vi-copy G bottom-line

    ## / is used for entering search
    #bind-key -t vi-copy / search-forward
    #bind-key -t vi-copy ? search-backward

    ## C-n/C-f are used for scrolling page
    #bind-key -t vi-copy C-n page-up
    #bind-key -t vi-copy C-f page-down

#### End Copy Mode

#### Mouse setting
    set-option -g mouse on
    bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
    bind -n WheelDownPane select-pane -t= \; send-keys -M
    bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
    #kbind -t vi-copy    C-WheelUpPane   halfpage-up
    #kbind -t vi-copy    C-WheelDownPane halfpage-down
    #bind -t emacs-copy C-WheelUpPane   halfpage-up
    #bind -t emacs-copy C-WheelDownPane halfpage-down
####

# ===== logging =====
#
# C-b C-p Start logging.
bind-key C-p pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "' \; display-message "Logging start."
# C-b C-o Stop logging
bind-key C-o pipe-pane \; display-message "Logging end."
# C-b v Open new window. Logging always. (-n is set window name.)
bind-key v new-window -n 'logging...' \; pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "'

set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'
